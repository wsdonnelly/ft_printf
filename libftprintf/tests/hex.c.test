/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   hex.c.test                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: rodrodri <rodrodri@student.hive.fi >       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/01/05 13:20:00 by rodrodri          #+#    #+#             */
/*   Updated: 2022/01/24 16:30:35 by rodrodri         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "test_printf.h"

void	test_hexadecimal(void)
{
	printf("Testing barebones 'unsigned int' specifiers ('%%u')\n");
	printf(" (std) returns: %d\n",    printf("|%x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%x|", -42) - 2);

	printf("\n----------------------------------------------------\n");
	printf("No Width. ' ' flag. Right aligned (no '-' flag possible).\n");
	printf(" (std) returns: %d\n",    printf("|% x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|% x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|% x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% x|", -42) - 2);

	printf("\nNo Width. '+' flag. Right aligned (no ' -' flags possible).\n");
	printf(" (std) returns: %d\n",    printf("|%+x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%+x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%+x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+x|", -42) - 2);

	printf("\nNo Width.'0' flag. Right aligned (no '-' flag possible). \n");
	printf(" (std) returns: %d\n",    printf("|%0x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%0x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%0x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%0x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%0x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%0x|", -42) - 2);

	printf("\nNo Width. ' 0' flags. Right aligned (no '-' flag possible).\n");
	printf(" (std) returns: %d\n",    printf("|% 0x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 0x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|% 0x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 0x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|% 0x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 0x|", -42) - 2);

	printf("\n---------------------------------------------\n");
	printf("Width directive. Right aligned (No flags).\n");
	printf(" (std) returns: %d\n",    printf("|%4x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%4x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%4x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%4x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%4x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%4x|", -42) - 2);

	printf("\nWidth directive. Right aligned (' ' flag).\n");
	printf(" (std) returns: %d\n",    printf("|% 3x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 3x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|% 3x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 3x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|% 3x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% 3x|", -42) - 2);

	printf("\nWidth directive. Right aligned ('+' flag)\n");
	printf(" (std) returns: %d\n",    printf("|%+4x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+4x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%+4x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+4x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%+4x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+4x|", -42) - 2);

	printf("\nWidth directive. Right aligned ('0' flag).\n");
	printf(" (std) returns: %d\n",    printf("|%04x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%04x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%04x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%04x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%04x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%04x|", -42) - 2);

	printf("\nWidth directive. Right aligned ('0+' flags).\n");
	printf(" (std) returns: %d\n",    printf("|%+04x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+04x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%+04x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+04x|", -42) - 2);
	printf(" (std) returns: %d\n",    printf("|%+04x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+04x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%+04x|", 10) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%+04x|", 10) - 2);

	printf("\n---------------------------------------------\n");
	printf("Width directive. Left aligned ('-' flag).\n");
	printf(" (std) returns: %d\n",    printf("|%-4x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-4x|", 42) - 2);

	printf("\nWidth directive. Left aligned ('-+' flags)\n");
	printf(" (std) returns: %d\n",    printf("|%-+4x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-+4x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%-+4x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%-+4x|", -42) - 2);

	printf("\nWidth directive. Left aligned ('- ' flag)\n");
	printf(" (std) returns: %d\n",    printf("|% -4x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% -4x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|% -4x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|% -4x|", -42) - 2);

	printf("\n---------------------------------------------\n");
	printf("Width (8) Precision (4). Right aligned (No flags).\n");
	printf(" (std) returns: %d\n",    printf("|%8.4x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%8.4x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%8.4x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%8.4x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%8.4x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%8.4x|", -42) - 2);

	printf("Width (8) Precision (4). Right aligned ('%%#8.4x').\n");
	printf(" (std) returns: %d\n",    printf("|%#8.4x|", 42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%#8.4x|", 42) - 2);
	printf(" (std) returns: %d\n",    printf("|%#8.4x|", 0) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%#8.4x|", 0) - 2);
	printf(" (std) returns: %d\n",    printf("|%#8.4x|", -42) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%#8.4x|", -42) - 2);

	printf("\n---------------------------------------------\n");
	printf("\nWidth directive ('-0' flags, '0' is ignored)\n");
	// printf(" (std) returns: %d\n",    printf("|%-04d|", -42) - 2);
	// printf(" (std) returns: %d\n",    printf("|%-04d|", 42) - 2);

	// printf("\n---------------------------------------------\n");
	// printf("\nTest length directives\n");
	// printf(" (std) returns: %d\n", ft_printf("|%lld|") - 2);
	// printf(" (std) returns: %d\n", ft_printf("|%10.3d|") - 2);
	// printf(" (std) returns: %d\n", ft_printf("|%#.8d|") - 2);
	// printf(" (std) returns: %d\n", ft_printf("|%hhd|") - 2);
	printf("\n---------------------------------------------\n");

	printf("\nUnsigned long. Minimum and maximum values\n");
	printf(" (std) returns: %d\n",    printf("|%llx, %llx|", 0ul, ULONG_MAX) - 2);
	printf(" (ft_) returns: %d\n", ft_printf("|%llx, %llx|", 0ul, ULONG_MAX) - 2);
	printf("End of tests\n");
}
/* vi: filetype=c */